name: Publish image

on:
  workflow_dispatch:
    inputs:
      manualTag:
        description: 'Manual Tag'
        required: true
      manualWithLatestTag:
        description: 'Manual With Latest Tag'
        required: true
        default: true
        type: boolean
  release:
    types: [published]

env:
  DOCKERHUB_USERNAME : ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD : ${{ secrets.DOCKERHUB_PASSWORD }}

jobs:
  CheckDockerToken:
    runs-on: ubuntu-latest
    outputs:
      hasToken: ${{ steps.step_one.outputs.hasToken }}
    steps:
      - name: Set the value
        id: step_one
        run: |
          if [ "$DOCKERHUB_PASSWORD" ] ; then
            echo "hasToken=true" >> $GITHUB_OUTPUT
          else
            echo "hasToken=false" >> $GITHUB_OUTPUT
          fi
      - name: Check the value
        run: |
          echo ${{ steps.step_one.outputs.hasToken }}
          ##echo "GITHUB_REF: $GITHUB_REF"
          ##echo "GITHUB_REF#refs/tags/: ${GITHUB_REF#refs/tags/}"
          echo "github.event.release.tag_name: ${{ github.event.release.tag_name }}"
          echo "github.event.inputs.manualTag: ${{ github.event.inputs.manualTag }}"

        
  Publish2DockerHub:
    runs-on: ubuntu-latest
    needs: CheckDockerToken
    if: "contains(needs.CheckDockerToken.outputs.hasToken, 'true')"
    steps:
      - 
        name: GetRepoTag
        id: getRepoTag
        run: |
          RepoTag=""
          if [ "${{ github.event.release.tag_name }}" ] ; then
            RepoTag=${{ github.event.release.tag_name }}
          fi
          if [ "${{ github.event.inputs.manualTag }}" ] ; then
            RepoTag=${{ github.event.inputs.manualTag }}
          fi
          echo "repo tag: $RepoTag"
          echo "repoTag=$RepoTag" >> $GITHUB_OUTPUT
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.getRepoTag.outputs.repoTag }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Log in to ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - 
        name: GetDockerTagNames
        id: getDockerTags
        run: |
          DOCKER_IMAGE_TAG="zai7lou/naiveproxy-docker:${{ steps.getRepoTag.outputs.repoTag }}"
          DOCKER_IMAGE_LATEST_TAG=",zai7lou/naiveproxy-docker:latest"
          if [ "${{ github.event.inputs.manualTag }}" ] && [ "${{ github.event.inputs.manualWithLatestTag }}" == "false" ] ; then
            DOCKER_IMAGE_LATEST_TAG=""
          fi
          DOCKER_IMAGE_TAGS=$DOCKER_IMAGE_TAG$DOCKER_IMAGE_LATEST_TAG
          echo "docker image tag: $DOCKER_IMAGE_TAGS"
          echo "dockerTags=$DOCKER_IMAGE_TAGS" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            zai7lou/naiveproxy-docker
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ steps.getRepoTag.outputs.repoTag }}
            type=raw,value=latest
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
