name: Publish image

on:
  workflow_dispatch:
    inputs:
      manualTag:
        description: 'Manual Tag'
        required: true
      manualWithLatestTag:
        description: 'Auto Add Latest Tag'
        required: true
        default: true
        type: boolean
  release:
    types: [published]

env:
  DOCKERHUB_USERNAME : ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD : ${{ secrets.DOCKERHUB_PASSWORD }}
  GHCR_USERNAME: ${{ github.repository_owner }}
  GHCR_PASSWORD: ${{ env.DOCKERHUB_PASSWORD }}

jobs:
  PublishImage:
    runs-on: ubuntu-latest
    steps:
      -  name: GetTargetVersion
        id: getTargetVersion
        run: |
          TargetVersion=""
          if [ "${{ github.event.release.tag_name }}" ] ; then
            TargetVersion=${{ github.event.release.tag_name }}
          fi
          if [ "${{ github.event.inputs.manualTag }}" ] ; then
            TargetVersion=${{ github.event.inputs.manualTag }}
          fi
          echo "TargetVersion: $TargetVersion"
          echo "TargetVersion=$TargetVersion" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.getTargetVersion.outputs.TargetVersion }}
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_PASSWORD }}

      - name: Log in to ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ env.GHCR_USERNAME }}
          password: ${{ env.GHCR_PASSWORD }}

      - name: GetDockerTagNames
        id: getDockerTags
        run: |
          DOCKER_IMAGE_TAG="zai7lou/naiveproxy-docker:${{ steps.getRepoTag.outputs.repoTag }}"
          DOCKER_IMAGE_LATEST_TAG=",zai7lou/naiveproxy-docker:latest"
          if [ "${{ github.event.inputs.manualTag }}" ] && [ "${{ github.event.inputs.manualWithLatestTag }}" == "false" ] ; then
            DOCKER_IMAGE_LATEST_TAG=""
          fi
          DOCKER_IMAGE_TAGS=$DOCKER_IMAGE_TAG$DOCKER_IMAGE_LATEST_TAG
          echo "docker image tag: $DOCKER_IMAGE_TAGS"
          echo "dockerTags=$DOCKER_IMAGE_TAGS" >> $GITHUB_OUTPUT

      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@v3
      #   with:
      #     images: |
      #       zai7lou/naiveproxy-docker
      #       ghcr.io/${{ github.repository }}
      #     tags: |
      #       type=raw,value=${{ steps.getRepoTag.outputs.repoTag }}
      #       type=raw,value=latest
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            zai7lou/naiveproxy-docker:${{ steps.getTargetVersion.outputs.TargetVersion }}
            ghcr.io/raywangqvq/naiveproxy-docker:${{ steps.getTargetVersion.outputs.TargetVersion }}
